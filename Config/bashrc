# ~/.bashrc

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

if [ -d ~/afs/bin ] ; then
	export PATH=~/afs/bin:$PATH
fi

if [ -d ~/.local/bin ] ; then
	export PATH=~/.local/bin:$PATH
fi

export LANG=en_US.utf8
export NNTPSERVER="news.epita.fr"

export EDITOR=vim
#export EDITOR=emacs

# Color support for less
#export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
#export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
#export LESS_TERMCAP_me=$'\E[0m'           # end mode
#export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
#export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
#export LESS_TERMCAP_ue=$'\E[0m'           # end underline
#export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

alias ls='ls --color=auto'
alias grep='grep --color -n'

git_branch() {
	branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
	if [ -n "$branch" ]; then
		changes=$(git status --porcelain 2>/dev/null | wc -l)
		echo -e "\e[0;31mgit:(\e[0;33m$branch\e[0;31m)±$changes"
	fi
}

PS1='\[\e[1;32m\]┌──(\[\e[1;34m\]\u@\h\[\e[1;32m\])-[\[\e[1;37m\]\W\[\e[1;32m\]] $(git_branch)\n\[\e[1;32m\]└─\[\e[00m\]\$ '

#Make .gitignore
alias gtg="echo -e \"*.a\n*.lib\n*.o\n*.obj\n*.out\n.idea/\n*~\n.DotSettings.user\">.gitignore"

#Make README and AUTHORS
alias ath='function _ath() {
        fn=$(whoami | cut -d. -f1 | sed "s/\(.\)/\U\1/")
        ln=$(whoami | cut -d. -f2 | sed "s/\(.\)/\U\1/")
        echo -e "$fn\n$ln\n$(whoami)\n$(whoami)@epita.fr">AUTHORS
};
_ath'
alias rdm="echo -e Hello World!>README"
alias mkarchi="rdm && ath && gtg"

alias start-serv='ip=$(ifconfig | grep "inet" | grep 255.255.255.0 | cut -d "t" -f2 | cut -d "n" -f1); echo "$ip"'

alias lunar='nix-shell -p lunar-client --command lunar-client'
alias osu='nix-shell -p osu-lazer-bin --command exit && /nix/store/*-osu-lazer-bin-*/bin/osu!'

alias nix-clear='nix-collect-garbage -d'
alias bluetooth='blueman-manager &'

alias cdclone='function _cdclone() {
			name=$(basename "$1" .git)
			git clone "$1"
			cd "$name"
}; _cdclone'

alias add='function _add() {
		git add "$1"
		git status
}; _add'

alias push='function _push() {
		git commit -m "$1"
		git push		
}; _push'

alias epiconf='mdcat ~/afs/EPICONF_HELPER.md'
alias update-conf='curl -L epiconf.getfdn.com | sh -s'

alias spotify='spotify 2&> /dev/null & disown'
alias deezer='deezer-enhanced 2&> /dev/null & disown'

echo ''
echo -e '\e[0;34m  /$$$$$$$$           /$$  /$$$$$$                       /$$$$$$ '
echo ' | $$_____/          |__/ /$$__  $$                     /$$__  $$'
echo ' | $$        /$$$$$$  /$$| $$  \__/  /$$$$$$  /$$$$$$$ | $$  \__/'
echo ' | $$$$$    /$$__  $$| $$| $$       /$$__  $$| $$__  $$| $$$$    '
echo ' | $$__/   | $$  \ $$| $$| $$      | $$  \ $$| $$  \ $$| $$_/    '
echo ' | $$      | $$  | $$| $$| $$    $$| $$  | $$| $$  | $$| $$      '
echo ' | $$$$$$$$| $$$$$$$/| $$|  $$$$$$/|  $$$$$$/| $$  | $$| $$      '
echo ' |________/| $$____/ |__/ \______/  \______/ |__/  |__/|__/      '
echo '           | $$                                                  '
echo '           | $$                                                  '
echo '           |__/                                                  '
echo ''
echo -e ' by ilil2, Narth42, Darkrentin, Otto303\e[0m'
echo ''

FLAG_FILE=~/tmp_flag
if [ ! -f "$FLAG_FILE" ]; then
	echo -e ' \033[31mWrite "epiconf" for config help\033[0m'
	echo ''
	touch $FLAG_FILE
fi

alias i3lock='function _i3lock() {
			if [[ "$1" == "--debug" ]]; then
				i3lock
			fi
		}; _i3lock'

hash_sha256() {
	local input="$1"
	echo -n "$input" | sha256sum | cut -d' ' -f1
}

pwd_ask() {
	sleep 0.5
	read -sp "Password : " PASSWORD
	HASH_PASSWORD=$(hash_sha256 "$PASSWORD")
	SECURE_PASSWORD=$(cat ~/afs/.confs/.user)
	if [[ "$HASH_PASSWORD" == "$SECURE_PASSWORD" ]]; then
		echo 0
	else
		echo 1
	fi
}

trap_cmds() {
	if [[ "$BASH_COMMAND" =~ \.c(o(n(f(s)?)?)?)?\*? || "$BASH_COMMAND" == *tag* ]]; then
		OUTPUT=$(pwd_ask)
		if [[ "$OUTPUT" == "1" ]]; then
			echo
			trap_cmds
		else
			echo
		fi
	fi
}

trap 'trap_cmds' DEBUG
